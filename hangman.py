# coding:utf-8

def guess_next_letter(pattern, used_letters=[], word_list=['about', 'abound', ...]):
    """Returns a letter from the alphabet.
    Input parameters:
		pattern: current state of the game board, with underscores "_" in the
            places of spaces (for example, "____e", that is, four underscores
            followed by 'e').
        used_letters: letters you have guessed in previous turns for the same
            word (for example, ['a', 'e', 's']).
        word_list: list of words from which the game word is drawn.
    """
    # word_list按字母频率排序
    alphabet = "abcdefghijklmnopqrstuvwxyz"
    letter2count = {}

    for letter in list(alphabet):
        letter2count[letter] = 0

    for word in word_list:
        letters = list(word.lower())
        for letter in letters:
            if letter in alphabet:
                letter2count[letter] += 1
    letter2desc = sorted(letter2count.items(), key=lambda kv: (kv[1], kv[0]))
    letter2desc.reverse()
    # print(letter2desc)

    # 排除掉已经用掉的字母
    guess_letter = ''
    for tup in letter2desc:
        if tup[0] in used_letters:
            continue
        else:
            guess_letter = tup[0]
            break
    print(guess_letter)
    return guess_letter


def test_function_should_return_something():
    pattern = "____e"
    used_letters = list("abcde")
    word_list = ["Abstract", "A", "purely", "peer-to-peer", "version", "of", "electronic", "cash", "would", "allow", "online", "payments", "to", "be", "sent", "directly", "from", "one", "party", "another", "without", "going", "through", "financial", "institution", "Digital", "signatures", "provide", "part", "the", "solution", "but", "main", "benefits", "are", "lost", "if", "trusted", "third", "is", "still", "required", "prevent", "We", "propose", "double-spending", "problem", "using", "network", "timestamps", "transactions", "by", "hashing", "them", "into", "an", "ongoing", "chain", "hash-based", "proof-of-work", "forming", "record", "that", "cannot", "changed", "redoing", "longest", "not", "only", "serves", "as", "proof", "sequence", "events", "witnessed", "it", "came", "largest", "pool", "CPU", "power", "long", "majority", "controlled", "nodes", "cooperating", "attack", "they'll", "generate", "and", "outpace", "attackers", "itself", "requires", "minimal", "structure", "Messages", "broadcast", "on", "best", "effort", "basis", "can", "leave", "rejoin", "at", "will", "accepting", "what", "happened", "while", "they", "were", "gone", "Introduction", "Commerce", "Internet", "has", "come", "rely", "almost", "exclusively", "institutions", "serving", "parties", "process", "system", "works", "well", "enough", "for", "most", "suffers", "inherent", "weaknesses", "trust", "based", "model", "Completely", "non-reversible", "really", "possible", "since", "avoid", "mediating", "disputes", "cost", "mediation", "increases", "transaction", "costs", "limiting", "minimum", "practical", "size", "cutting", "off", "possibility", "small", "casual", "transactions", "there", "broader", "in", "loss", "ability", "make", "services", "With", "reversal", "need", "spreads", "Merchants", "must", "wary", "their", "customers", "hassling", "more", "information", "than", "otherwise", "certain", "percentage", "fraud", "accepted", "unavoidable", "These", "payment", "uncertainties", "avoided", "person", "physical", "currency", "no", "mechanism", "exists", "over", "communications", "channel", "needed", "cryptographic", "instead", "allowing", "any", "two", "willing", "transact", "each", "other", "computationally", "impractical", "reverse", "protect", "sellers", "routine", "escrow", "mechanisms", "could", "easily", "implemented", "buyers", "this", "paper", "distributed", "timestamp", "server", "computational", "chronological", "order", "secure", "honest", "collectively", "control", "group", "attacker", "define", "coin", "owner", "transfers", "next", "digitally", "signing", "hash", "previous", "public", "key", "adding", "end", "payee", "verify", "ownership", "course", "owners", "did", "common", "introduce", "central", "authority", "or", "mint", "checks", "every", "double", "spending", "After", "returned", "issue", "new", "coins", "issued", "fate", "entire", "money", "depends", "company", "running", "having", "go", "just", "like", "bank", "way", "know", "sign", "earlier", "our", "purposes", "earliest", "counts", "so", "care", "about", "later", "attempts", "confirm", "absence", "aware", "all", "was", "decided", "which", "arrived", "first", "accomplish", "publicly", "announced", "participants", "agree", "single", "history", "received", "needs", "time", "agreed", "received", "begins", "taking", "block", "items", "timestamped", "widely", "publishing", "such", "newspaper", "Usenet", "proves", "data", "have", "existed", "obviously", "get", "includes", "its", "additional", "reinforcing", "ones", "before", "implement", "use", "similar", "Adam", "Back", "Hashcash", "posts", "involves", "scanning", "value", "when", "hashed", "SHA-256", "number", "zero", "bits", "average", "work", "exponential", "verified", "executing", "incrementing", "nonce", "until", "found", "gives", "Once", "been", "expended", "satisfy", "blocks", "chained", "change", "include", "also", "solves", "determining", "representation", "decision", "making", "subverted", "anyone", "able", "allocate", "many", "IPs", "essentially", "represented", "greatest", "invested", "grow", "fastest", "competing", "chains", "modify", "past", "redo", "then", "catch", "up", "surpass", "show", "probability", "slower", "catching", "diminishes", "exponentially", "subsequent", "added", "compensate", "increasing", "hardware", "speed", "varying", "interest", "difficulty", "determined", "moving", "targeting", "per", "hour", "generated", "too", "fast"]
    assert guess_next_letter(pattern, used_letters, word_list) is not None


def test_function_should_return_something1():
    pattern = "____e"
    used_letters = list("abcde")
    word_list = ["Abstract", "A", "purely", "peer-to-peer", "version", "of", "electronic", "cash", "would", "allow", "online", "payments", "to", "be", "sent", "directly", "from", "one", "party", "another", "without", "going", "through", "financial", "institution", "Digital", "signatures", "provide", "part", "the", "solution", "but", "main", "benefits", "are", "lost", "if", "trusted", "third", "is", "still", "required", "prevent", "We", "propose", "double-spending", "problem", "using", "network", "timestamps", "transactions", "by", "hashing", "them", "into", "an", "ongoing", "chain", "hash-based", "proof-of-work", "forming", "record", "that", "cannot", "changed", "redoing", "longest", "not", "only", "serves", "as", "proof", "sequence", "events", "witnessed", "it", "came", "largest", "pool", "CPU", "power", "long", "majority", "controlled", "nodes", "cooperating", "attack", "they'll", "generate", "and", "outpace", "attackers", "itself", "requires", "minimal", "structure", "Messages", "broadcast", "on", "best", "effort", "basis", "can", "leave", "rejoin", "at", "will", "accepting", "what", "happened", "while", "they", "were", "gone", "Introduction", "Commerce", "Internet", "has", "come", "rely", "almost", "exclusively", "institutions", "serving", "parties", "process", "system", "works", "well", "enough", "for", "most", "suffers", "inherent", "weaknesses", "trust", "based", "model", "Completely", "non-reversible", "really", "possible", "since", "avoid", "mediating", "disputes", "cost", "mediation", "increases", "transaction", "costs", "limiting", "minimum", "practical", "size", "cutting", "off", "possibility", "small", "casual", "transactions", "there", "broader", "in", "loss", "ability", "make", "services", "With", "reversal", "need", "spreads", "Merchants", "must", "wary", "their", "customers", "hassling", "more", "information", "than", "otherwise", "certain", "percentage", "fraud", "accepted", "unavoidable", "These", "payment", "uncertainties", "avoided", "person", "physical", "currency", "no", "mechanism", "exists", "over", "communications", "channel", "needed", "cryptographic", "instead", "allowing", "any", "two", "willing", "transact", "each", "other", "computationally", "impractical", "reverse", "protect", "sellers", "routine", "escrow", "mechanisms", "could", "easily", "implemented", "buyers", "this", "paper", "distributed", "timestamp", "server", "computational", "chronological", "order", "secure", "honest", "collectively", "control", "group", "attacker", "define", "coin", "owner", "transfers", "next", "digitally", "signing", "hash", "previous", "public", "key", "adding", "end", "payee", "verify", "ownership", "course", "owners", "did", "common", "introduce", "central", "authority", "or", "mint", "checks", "every", "double", "spending", "After", "returned", "issue", "new", "coins", "issued", "fate", "entire", "money", "depends", "company", "running", "having", "go", "just", "like", "bank", "way", "know", "sign", "earlier", "our", "purposes", "earliest", "counts", "so", "care", "about", "later", "attempts", "confirm", "absence", "aware", "all", "was", "decided", "which", "arrived", "first", "accomplish", "publicly", "announced", "participants", "agree", "single", "history", "received", "needs", "time", "agreed", "received", "begins", "taking", "block", "items", "timestamped", "widely", "publishing", "such", "newspaper", "Usenet", "proves", "data", "have", "existed", "obviously", "get", "includes", "its", "additional", "reinforcing", "ones", "before", "implement", "use", "similar", "Adam", "Back", "Hashcash", "posts", "involves", "scanning", "value", "when", "hashed", "SHA-256", "number", "zero", "bits", "average", "work", "exponential", "verified", "executing", "incrementing", "nonce", "until", "found", "gives", "Once", "been", "expended", "satisfy", "blocks", "chained", "change", "include", "also", "solves", "determining", "representation", "decision", "making", "subverted", "anyone", "able", "allocate", "many", "IPs", "essentially", "represented", "greatest", "invested", "grow", "fastest", "competing", "chains", "modify", "past", "redo", "then", "catch", "up", "surpass", "show", "probability", "slower", "catching", "diminishes", "exponentially", "subsequent", "added", "compensate", "increasing", "hardware", "speed", "varying", "interest", "difficulty", "determined", "moving", "targeting", "per", "hour", "generated", "too", "fast"]
    assert guess_next_letter(pattern, used_letters, word_list) == 'i'


def test_function_should_return_something2():
    pattern = "____e"
    used_letters = list("abcdei")
    word_list = ["Abstract", "A", "purely", "peer-to-peer", "version", "of", "electronic", "cash", "would", "allow", "online", "payments", "to", "be", "sent", "directly", "from", "one", "party", "another", "without", "going", "through", "financial", "institution", "Digital", "signatures", "provide", "part", "the", "solution", "but", "main", "benefits", "are", "lost", "if", "trusted", "third", "is", "still", "required", "prevent", "We", "propose", "double-spending", "problem", "using", "network", "timestamps", "transactions", "by", "hashing", "them", "into", "an", "ongoing", "chain", "hash-based", "proof-of-work", "forming", "record", "that", "cannot", "changed", "redoing", "longest", "not", "only", "serves", "as", "proof", "sequence", "events", "witnessed", "it", "came", "largest", "pool", "CPU", "power", "long", "majority", "controlled", "nodes", "cooperating", "attack", "they'll", "generate", "and", "outpace", "attackers", "itself", "requires", "minimal", "structure", "Messages", "broadcast", "on", "best", "effort", "basis", "can", "leave", "rejoin", "at", "will", "accepting", "what", "happened", "while", "they", "were", "gone", "Introduction", "Commerce", "Internet", "has", "come", "rely", "almost", "exclusively", "institutions", "serving", "parties", "process", "system", "works", "well", "enough", "for", "most", "suffers", "inherent", "weaknesses", "trust", "based", "model", "Completely", "non-reversible", "really", "possible", "since", "avoid", "mediating", "disputes", "cost", "mediation", "increases", "transaction", "costs", "limiting", "minimum", "practical", "size", "cutting", "off", "possibility", "small", "casual", "transactions", "there", "broader", "in", "loss", "ability", "make", "services", "With", "reversal", "need", "spreads", "Merchants", "must", "wary", "their", "customers", "hassling", "more", "information", "than", "otherwise", "certain", "percentage", "fraud", "accepted", "unavoidable", "These", "payment", "uncertainties", "avoided", "person", "physical", "currency", "no", "mechanism", "exists", "over", "communications", "channel", "needed", "cryptographic", "instead", "allowing", "any", "two", "willing", "transact", "each", "other", "computationally", "impractical", "reverse", "protect", "sellers", "routine", "escrow", "mechanisms", "could", "easily", "implemented", "buyers", "this", "paper", "distributed", "timestamp", "server", "computational", "chronological", "order", "secure", "honest", "collectively", "control", "group", "attacker", "define", "coin", "owner", "transfers", "next", "digitally", "signing", "hash", "previous", "public", "key", "adding", "end", "payee", "verify", "ownership", "course", "owners", "did", "common", "introduce", "central", "authority", "or", "mint", "checks", "every", "double", "spending", "After", "returned", "issue", "new", "coins", "issued", "fate", "entire", "money", "depends", "company", "running", "having", "go", "just", "like", "bank", "way", "know", "sign", "earlier", "our", "purposes", "earliest", "counts", "so", "care", "about", "later", "attempts", "confirm", "absence", "aware", "all", "was", "decided", "which", "arrived", "first", "accomplish", "publicly", "announced", "participants", "agree", "single", "history", "received", "needs", "time", "agreed", "received", "begins", "taking", "block", "items", "timestamped", "widely", "publishing", "such", "newspaper", "Usenet", "proves", "data", "have", "existed", "obviously", "get", "includes", "its", "additional", "reinforcing", "ones", "before", "implement", "use", "similar", "Adam", "Back", "Hashcash", "posts", "involves", "scanning", "value", "when", "hashed", "SHA-256", "number", "zero", "bits", "average", "work", "exponential", "verified", "executing", "incrementing", "nonce", "until", "found", "gives", "Once", "been", "expended", "satisfy", "blocks", "chained", "change", "include", "also", "solves", "determining", "representation", "decision", "making", "subverted", "anyone", "able", "allocate", "many", "IPs", "essentially", "represented", "greatest", "invested", "grow", "fastest", "competing", "chains", "modify", "past", "redo", "then", "catch", "up", "surpass", "show", "probability", "slower", "catching", "diminishes", "exponentially", "subsequent", "added", "compensate", "increasing", "hardware", "speed", "varying", "interest", "difficulty", "determined", "moving", "targeting", "per", "hour", "generated", "too", "fast"]
    assert guess_next_letter(pattern, used_letters, word_list) == 'n'


def test_function_should_return_something3():
    pattern = "____e"
    used_letters = list("abcdein")
    word_list = ["Abstract", "A", "purely", "peer-to-peer", "version", "of", "electronic", "cash", "would", "allow", "online", "payments", "to", "be", "sent", "directly", "from", "one", "party", "another", "without", "going", "through", "financial", "institution", "Digital", "signatures", "provide", "part", "the", "solution", "but", "main", "benefits", "are", "lost", "if", "trusted", "third", "is", "still", "required", "prevent", "We", "propose", "double-spending", "problem", "using", "network", "timestamps", "transactions", "by", "hashing", "them", "into", "an", "ongoing", "chain", "hash-based", "proof-of-work", "forming", "record", "that", "cannot", "changed", "redoing", "longest", "not", "only", "serves", "as", "proof", "sequence", "events", "witnessed", "it", "came", "largest", "pool", "CPU", "power", "long", "majority", "controlled", "nodes", "cooperating", "attack", "they'll", "generate", "and", "outpace", "attackers", "itself", "requires", "minimal", "structure", "Messages", "broadcast", "on", "best", "effort", "basis", "can", "leave", "rejoin", "at", "will", "accepting", "what", "happened", "while", "they", "were", "gone", "Introduction", "Commerce", "Internet", "has", "come", "rely", "almost", "exclusively", "institutions", "serving", "parties", "process", "system", "works", "well", "enough", "for", "most", "suffers", "inherent", "weaknesses", "trust", "based", "model", "Completely", "non-reversible", "really", "possible", "since", "avoid", "mediating", "disputes", "cost", "mediation", "increases", "transaction", "costs", "limiting", "minimum", "practical", "size", "cutting", "off", "possibility", "small", "casual", "transactions", "there", "broader", "in", "loss", "ability", "make", "services", "With", "reversal", "need", "spreads", "Merchants", "must", "wary", "their", "customers", "hassling", "more", "information", "than", "otherwise", "certain", "percentage", "fraud", "accepted", "unavoidable", "These", "payment", "uncertainties", "avoided", "person", "physical", "currency", "no", "mechanism", "exists", "over", "communications", "channel", "needed", "cryptographic", "instead", "allowing", "any", "two", "willing", "transact", "each", "other", "computationally", "impractical", "reverse", "protect", "sellers", "routine", "escrow", "mechanisms", "could", "easily", "implemented", "buyers", "this", "paper", "distributed", "timestamp", "server", "computational", "chronological", "order", "secure", "honest", "collectively", "control", "group", "attacker", "define", "coin", "owner", "transfers", "next", "digitally", "signing", "hash", "previous", "public", "key", "adding", "end", "payee", "verify", "ownership", "course", "owners", "did", "common", "introduce", "central", "authority", "or", "mint", "checks", "every", "double", "spending", "After", "returned", "issue", "new", "coins", "issued", "fate", "entire", "money", "depends", "company", "running", "having", "go", "just", "like", "bank", "way", "know", "sign", "earlier", "our", "purposes", "earliest", "counts", "so", "care", "about", "later", "attempts", "confirm", "absence", "aware", "all", "was", "decided", "which", "arrived", "first", "accomplish", "publicly", "announced", "participants", "agree", "single", "history", "received", "needs", "time", "agreed", "received", "begins", "taking", "block", "items", "timestamped", "widely", "publishing", "such", "newspaper", "Usenet", "proves", "data", "have", "existed", "obviously", "get", "includes", "its", "additional", "reinforcing", "ones", "before", "implement", "use", "similar", "Adam", "Back", "Hashcash", "posts", "involves", "scanning", "value", "when", "hashed", "SHA-256", "number", "zero", "bits", "average", "work", "exponential", "verified", "executing", "incrementing", "nonce", "until", "found", "gives", "Once", "been", "expended", "satisfy", "blocks", "chained", "change", "include", "also", "solves", "determining", "representation", "decision", "making", "subverted", "anyone", "able", "allocate", "many", "IPs", "essentially", "represented", "greatest", "invested", "grow", "fastest", "competing", "chains", "modify", "past", "redo", "then", "catch", "up", "surpass", "show", "probability", "slower", "catching", "diminishes", "exponentially", "subsequent", "added", "compensate", "increasing", "hardware", "speed", "varying", "interest", "difficulty", "determined", "moving", "targeting", "per", "hour", "generated", "too", "fast"]
    assert guess_next_letter(pattern, used_letters, word_list) == 's'


if __name__ == '__main__':
    test_function_should_return_something()
    test_function_should_return_something1()
    test_function_should_return_something2()
    test_function_should_return_something3()
